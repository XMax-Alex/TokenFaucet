{
	"id": "e54b0e8ad75e2d553a3c9fce4ef83c92",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/faucet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\ncontract faucet{\r\n\r\n    uint256 public amountAllowed = 100;\r\n    address public tokenContractAddress;\r\n    mapping(address => bool) requestAddress;\r\n\r\n\r\n    event SendToken(address indexed Receiver,uint256 indexed Amount);\r\n\r\n\r\n    constructor(address _tokenContractAddress){\r\n        tokenContractAddress = _tokenContractAddress;\r\n    }\r\n\r\n    function requestTokens() external  {\r\n        require(requestAddress[msg.sender] == false,\"only be claimed once\");\r\n        IERC20 token = IERC20(tokenContractAddress);\r\n        require(token.balanceOf(address(this)) >= amountAllowed,\"faucet empty !!!\");\r\n\r\n        token.transfer(msg.sender,amountAllowed);\r\n        requestAddress[msg.sender] == true;\r\n\r\n        emit SendToken(msg.sender,amountAllowed);\r\n\r\n    }\r\n\r\n\r\n}"
			},
			"contract/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev ERC20 接口合约.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev 释放条件：当 `value` 单位的货币从账户 (`from`) 转账到另一账户 (`to`)时.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev 释放条件：当 `value` 单位的货币从账户 (`owner`) 授权给另一账户 (`spender`)时.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev 返回代币总供给.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev 返回账户`account`所持有的代币数.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev 转账 `amount` 单位代币，从调用者账户到另一账户 `to`.\r\n     *\r\n     * 如果成功，返回 `true`.\r\n     *\r\n     * 释放 {Transfer} 事件.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev 返回`owner`账户授权给`spender`账户的额度，默认为0。\r\n     *\r\n     * 当{approve} 或 {transferFrom} 被调用时，`allowance`会改变.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev 调用者账户给`spender`账户授权 `amount`数量代币。\r\n     *\r\n     * 如果成功，返回 `true`.\r\n     *\r\n     * 释放 {Approval} 事件.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev 通过授权机制，从`from`账户向`to`账户转账`amount`数量代币。转账的部分会从调用者的`allowance`中扣除。\r\n     *\r\n     * 如果成功，返回 `true`.\r\n     *\r\n     * 释放 {Transfer} 事件.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 接口合约.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "释放条件：当 `value` 单位的货币从账户 (`owner`) 授权给另一账户 (`spender`)时."
							},
							"Transfer(address,address,uint256)": {
								"details": "释放条件：当 `value` 单位的货币从账户 (`from`) 转账到另一账户 (`to`)时."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "返回`owner`账户授权给`spender`账户的额度，默认为0。 当{approve} 或 {transferFrom} 被调用时，`allowance`会改变."
							},
							"approve(address,uint256)": {
								"details": "调用者账户给`spender`账户授权 `amount`数量代币。 如果成功，返回 `true`. 释放 {Approval} 事件."
							},
							"balanceOf(address)": {
								"details": "返回账户`account`所持有的代币数."
							},
							"totalSupply()": {
								"details": "返回代币总供给."
							},
							"transfer(address,uint256)": {
								"details": "转账 `amount` 单位代币，从调用者账户到另一账户 `to`. 如果成功，返回 `true`. 释放 {Transfer} 事件."
							},
							"transferFrom(address,address,uint256)": {
								"details": "通过授权机制，从`from`账户向`to`账户转账`amount`数量代币。转账的部分会从调用者的`allowance`中扣除。 如果成功，返回 `true`. 释放 {Transfer} 事件."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 \\u63a5\\u53e3\\u5408\\u7ea6.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"\\u91ca\\u653e\\u6761\\u4ef6\\uff1a\\u5f53 `value` \\u5355\\u4f4d\\u7684\\u8d27\\u5e01\\u4ece\\u8d26\\u6237 (`owner`) \\u6388\\u6743\\u7ed9\\u53e6\\u4e00\\u8d26\\u6237 (`spender`)\\u65f6.\"},\"Transfer(address,address,uint256)\":{\"details\":\"\\u91ca\\u653e\\u6761\\u4ef6\\uff1a\\u5f53 `value` \\u5355\\u4f4d\\u7684\\u8d27\\u5e01\\u4ece\\u8d26\\u6237 (`from`) \\u8f6c\\u8d26\\u5230\\u53e6\\u4e00\\u8d26\\u6237 (`to`)\\u65f6.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"\\u8fd4\\u56de`owner`\\u8d26\\u6237\\u6388\\u6743\\u7ed9`spender`\\u8d26\\u6237\\u7684\\u989d\\u5ea6\\uff0c\\u9ed8\\u8ba4\\u4e3a0\\u3002 \\u5f53{approve} \\u6216 {transferFrom} \\u88ab\\u8c03\\u7528\\u65f6\\uff0c`allowance`\\u4f1a\\u6539\\u53d8.\"},\"approve(address,uint256)\":{\"details\":\"\\u8c03\\u7528\\u8005\\u8d26\\u6237\\u7ed9`spender`\\u8d26\\u6237\\u6388\\u6743 `amount`\\u6570\\u91cf\\u4ee3\\u5e01\\u3002 \\u5982\\u679c\\u6210\\u529f\\uff0c\\u8fd4\\u56de `true`. \\u91ca\\u653e {Approval} \\u4e8b\\u4ef6.\"},\"balanceOf(address)\":{\"details\":\"\\u8fd4\\u56de\\u8d26\\u6237`account`\\u6240\\u6301\\u6709\\u7684\\u4ee3\\u5e01\\u6570.\"},\"totalSupply()\":{\"details\":\"\\u8fd4\\u56de\\u4ee3\\u5e01\\u603b\\u4f9b\\u7ed9.\"},\"transfer(address,uint256)\":{\"details\":\"\\u8f6c\\u8d26 `amount` \\u5355\\u4f4d\\u4ee3\\u5e01\\uff0c\\u4ece\\u8c03\\u7528\\u8005\\u8d26\\u6237\\u5230\\u53e6\\u4e00\\u8d26\\u6237 `to`. \\u5982\\u679c\\u6210\\u529f\\uff0c\\u8fd4\\u56de `true`. \\u91ca\\u653e {Transfer} \\u4e8b\\u4ef6.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"\\u901a\\u8fc7\\u6388\\u6743\\u673a\\u5236\\uff0c\\u4ece`from`\\u8d26\\u6237\\u5411`to`\\u8d26\\u6237\\u8f6c\\u8d26`amount`\\u6570\\u91cf\\u4ee3\\u5e01\\u3002\\u8f6c\\u8d26\\u7684\\u90e8\\u5206\\u4f1a\\u4ece\\u8c03\\u7528\\u8005\\u7684`allowance`\\u4e2d\\u6263\\u9664\\u3002 \\u5982\\u679c\\u6210\\u529f\\uff0c\\u8fd4\\u56de `true`. \\u91ca\\u653e {Transfer} \\u4e8b\\u4ef6.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/IERC20.sol\":{\"keccak256\":\"0x348503cbba1d9c9ca51cdbfaac561ac2d32f7956a96e30997205a9f2cb06629b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3238430781cc748b196db3779e1ae2b94a5c69c59051a7093c36541c65a58be0\",\"dweb:/ipfs/QmYUVqT4UM2QW5zBJCbmxjGpwGB8BsA2PqUiujFoEW6mHJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/faucet.sol": {
				"faucet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenContractAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "Receiver",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "Amount",
									"type": "uint256"
								}
							],
							"name": "SendToken",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "amountAllowed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/faucet.sol\":86:852  contract faucet{... */\n  mstore(0x40, 0x80)\n    /* \"contract/faucet.sol\":141:144  100 */\n  0x64\n    /* \"contract/faucet.sol\":110:144  uint256 public amountAllowed = 100 */\n  0x00\n  sstore\n    /* \"contract/faucet.sol\":318:423  constructor(address _tokenContractAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contract/faucet.sol\":394:415  _tokenContractAddress */\n  dup1\n    /* \"contract/faucet.sol\":371:391  tokenContractAddress */\n  0x01\n  0x00\n    /* \"contract/faucet.sol\":371:415  tokenContractAddress = _tokenContractAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract/faucet.sol\":318:423  constructor(address _tokenContractAddress){... */\n  pop\n    /* \"contract/faucet.sol\":86:852  contract faucet{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contract/faucet.sol\":86:852  contract faucet{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/faucet.sol\":86:852  contract faucet{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x359cf2b7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x82edaf94\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9ad2cd14\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/faucet.sol\":431:845  function requestTokens() external  {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contract/faucet.sol\":151:186  address public tokenContractAddress */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/faucet.sol\":110:144  uint256 public amountAllowed = 100 */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/faucet.sol\":431:845  function requestTokens() external  {... */\n    tag_7:\n        /* \"contract/faucet.sol\":515:520  false */\n      0x00\n        /* \"contract/faucet.sol\":485:520  requestAddress[msg.sender] == false */\n      iszero\n      iszero\n        /* \"contract/faucet.sol\":485:499  requestAddress */\n      0x02\n        /* \"contract/faucet.sol\":485:511  requestAddress[msg.sender] */\n      0x00\n        /* \"contract/faucet.sol\":500:510  msg.sender */\n      caller\n        /* \"contract/faucet.sol\":485:511  requestAddress[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contract/faucet.sol\":485:520  requestAddress[msg.sender] == false */\n      iszero\n      iszero\n      eq\n        /* \"contract/faucet.sol\":477:544  require(requestAddress[msg.sender] == false,\"only be claimed once\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"contract/faucet.sol\":555:567  IERC20 token */\n      0x00\n        /* \"contract/faucet.sol\":577:597  tokenContractAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/faucet.sol\":555:598  IERC20 token = IERC20(tokenContractAddress) */\n      swap1\n      pop\n        /* \"contract/faucet.sol\":651:664  amountAllowed */\n      sload(0x00)\n        /* \"contract/faucet.sol\":617:622  token */\n      dup2\n        /* \"contract/faucet.sol\":617:632  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contract/faucet.sol\":641:645  this */\n      address\n        /* \"contract/faucet.sol\":617:647  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_20:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contract/faucet.sol\":617:664  token.balanceOf(address(this)) >= amountAllowed */\n      lt\n      iszero\n        /* \"contract/faucet.sol\":609:684  require(token.balanceOf(address(this)) >= amountAllowed,\"faucet empty !!!\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contract/faucet.sol\":697:702  token */\n      dup1\n        /* \"contract/faucet.sol\":697:711  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contract/faucet.sol\":712:722  msg.sender */\n      caller\n        /* \"contract/faucet.sol\":723:736  amountAllowed */\n      sload(0x00)\n        /* \"contract/faucet.sol\":697:737  token.transfer(msg.sender,amountAllowed) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap3\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      pop\n        /* \"contract/faucet.sol\":778:782  true */\n      0x01\n        /* \"contract/faucet.sol\":748:782  requestAddress[msg.sender] == true */\n      iszero\n      iszero\n        /* \"contract/faucet.sol\":748:762  requestAddress */\n      0x02\n        /* \"contract/faucet.sol\":748:774  requestAddress[msg.sender] */\n      0x00\n        /* \"contract/faucet.sol\":763:773  msg.sender */\n      caller\n        /* \"contract/faucet.sol\":748:774  requestAddress[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      pop\n      pop\n        /* \"contract/faucet.sol\":748:782  requestAddress[msg.sender] == true */\n      pop\n        /* \"contract/faucet.sol\":821:834  amountAllowed */\n      sload(0x00)\n        /* \"contract/faucet.sol\":810:820  msg.sender */\n      caller\n        /* \"contract/faucet.sol\":800:835  SendToken(msg.sender,amountAllowed) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x916800025d85907d1e91e112659a8e7e77a17ea4de231b05f15bb381d3bfde61\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract/faucet.sol\":466:845  {... */\n      pop\n        /* \"contract/faucet.sol\":431:845  function requestTokens() external  {... */\n      jump\t// out\n        /* \"contract/faucet.sol\":151:186  address public tokenContractAddress */\n    tag_9:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contract/faucet.sol\":110:144  uint256 public amountAllowed = 100 */\n    tag_13:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_34:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_35:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_55\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_34\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_36:\n        /* \"#utility.yul\":328:352   */\n      tag_57\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_35\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_59\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_36\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_37:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_38:\n        /* \"#utility.yul\":763:787   */\n      tag_62\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_37\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_15:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_64\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_38\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1197   */\n    tag_39:\n        /* \"#utility.yul\":1112:1123   */\n      0x00\n        /* \"#utility.yul\":1146:1152   */\n      dup3\n        /* \"#utility.yul\":1141:1144   */\n      dup3\n        /* \"#utility.yul\":1134:1153   */\n      mstore\n        /* \"#utility.yul\":1186:1190   */\n      0x20\n        /* \"#utility.yul\":1181:1184   */\n      dup3\n        /* \"#utility.yul\":1177:1191   */\n      add\n        /* \"#utility.yul\":1162:1191   */\n      swap1\n      pop\n        /* \"#utility.yul\":1028:1197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1203:1373   */\n    tag_40:\n        /* \"#utility.yul\":1343:1365   */\n      0x6f6e6c7920626520636c61696d6564206f6e6365000000000000000000000000\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1331:1337   */\n      dup3\n        /* \"#utility.yul\":1327:1341   */\n      add\n        /* \"#utility.yul\":1320:1366   */\n      mstore\n        /* \"#utility.yul\":1203:1373   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1379:1745   */\n    tag_41:\n        /* \"#utility.yul\":1521:1524   */\n      0x00\n        /* \"#utility.yul\":1542:1609   */\n      tag_68\n        /* \"#utility.yul\":1606:1608   */\n      0x14\n        /* \"#utility.yul\":1601:1604   */\n      dup4\n        /* \"#utility.yul\":1542:1609   */\n      tag_39\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1535:1609   */\n      swap2\n      pop\n        /* \"#utility.yul\":1618:1711   */\n      tag_69\n        /* \"#utility.yul\":1707:1710   */\n      dup3\n        /* \"#utility.yul\":1618:1711   */\n      tag_40\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1731:1734   */\n      dup3\n        /* \"#utility.yul\":1727:1739   */\n      add\n        /* \"#utility.yul\":1720:1739   */\n      swap1\n      pop\n        /* \"#utility.yul\":1379:1745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1751:2170   */\n    tag_19:\n        /* \"#utility.yul\":1917:1921   */\n      0x00\n        /* \"#utility.yul\":1955:1957   */\n      0x20\n        /* \"#utility.yul\":1944:1953   */\n      dup3\n        /* \"#utility.yul\":1940:1958   */\n      add\n        /* \"#utility.yul\":1932:1958   */\n      swap1\n      pop\n        /* \"#utility.yul\":2004:2013   */\n      dup2\n        /* \"#utility.yul\":1998:2002   */\n      dup2\n        /* \"#utility.yul\":1994:2014   */\n      sub\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1979:1988   */\n      dup4\n        /* \"#utility.yul\":1975:1992   */\n      add\n        /* \"#utility.yul\":1968:2015   */\n      mstore\n        /* \"#utility.yul\":2032:2163   */\n      tag_71\n        /* \"#utility.yul\":2158:2162   */\n      dup2\n        /* \"#utility.yul\":2032:2163   */\n      tag_41\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2024:2163   */\n      swap1\n      pop\n        /* \"#utility.yul\":1751:2170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2257:2374   */\n    tag_43:\n        /* \"#utility.yul\":2366:2367   */\n      0x00\n        /* \"#utility.yul\":2363:2364   */\n      dup1\n        /* \"#utility.yul\":2356:2368   */\n      revert\n        /* \"#utility.yul\":2503:2625   */\n    tag_45:\n        /* \"#utility.yul\":2576:2600   */\n      tag_76\n        /* \"#utility.yul\":2594:2599   */\n      dup2\n        /* \"#utility.yul\":2576:2600   */\n      tag_37\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2569:2574   */\n      dup2\n        /* \"#utility.yul\":2566:2601   */\n      eq\n        /* \"#utility.yul\":2556:2619   */\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2615:2616   */\n      0x00\n        /* \"#utility.yul\":2612:2613   */\n      dup1\n        /* \"#utility.yul\":2605:2617   */\n      revert\n        /* \"#utility.yul\":2556:2619   */\n    tag_77:\n        /* \"#utility.yul\":2503:2625   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2631:2774   */\n    tag_46:\n        /* \"#utility.yul\":2688:2693   */\n      0x00\n        /* \"#utility.yul\":2719:2725   */\n      dup2\n        /* \"#utility.yul\":2713:2726   */\n      mload\n        /* \"#utility.yul\":2704:2726   */\n      swap1\n      pop\n        /* \"#utility.yul\":2735:2768   */\n      tag_79\n        /* \"#utility.yul\":2762:2767   */\n      dup2\n        /* \"#utility.yul\":2735:2768   */\n      tag_45\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2631:2774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2780:3131   */\n    tag_24:\n        /* \"#utility.yul\":2850:2856   */\n      0x00\n        /* \"#utility.yul\":2899:2901   */\n      0x20\n        /* \"#utility.yul\":2887:2896   */\n      dup3\n        /* \"#utility.yul\":2878:2885   */\n      dup5\n        /* \"#utility.yul\":2874:2897   */\n      sub\n        /* \"#utility.yul\":2870:2902   */\n      slt\n        /* \"#utility.yul\":2867:2986   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":2905:2984   */\n      tag_82\n      tag_43\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2867:2986   */\n    tag_81:\n        /* \"#utility.yul\":3025:3026   */\n      0x00\n        /* \"#utility.yul\":3050:3114   */\n      tag_83\n        /* \"#utility.yul\":3106:3113   */\n      dup5\n        /* \"#utility.yul\":3097:3103   */\n      dup3\n        /* \"#utility.yul\":3086:3095   */\n      dup6\n        /* \"#utility.yul\":3082:3104   */\n      add\n        /* \"#utility.yul\":3050:3114   */\n      tag_46\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3040:3114   */\n      swap2\n      pop\n        /* \"#utility.yul\":2996:3124   */\n      pop\n        /* \"#utility.yul\":2780:3131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3137:3303   */\n    tag_47:\n        /* \"#utility.yul\":3277:3295   */\n      0x66617563657420656d7074792021212100000000000000000000000000000000\n        /* \"#utility.yul\":3273:3274   */\n      0x00\n        /* \"#utility.yul\":3265:3271   */\n      dup3\n        /* \"#utility.yul\":3261:3275   */\n      add\n        /* \"#utility.yul\":3254:3296   */\n      mstore\n        /* \"#utility.yul\":3137:3303   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3309:3675   */\n    tag_48:\n        /* \"#utility.yul\":3451:3454   */\n      0x00\n        /* \"#utility.yul\":3472:3539   */\n      tag_86\n        /* \"#utility.yul\":3536:3538   */\n      0x10\n        /* \"#utility.yul\":3531:3534   */\n      dup4\n        /* \"#utility.yul\":3472:3539   */\n      tag_39\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3465:3539   */\n      swap2\n      pop\n        /* \"#utility.yul\":3548:3641   */\n      tag_87\n        /* \"#utility.yul\":3637:3640   */\n      dup3\n        /* \"#utility.yul\":3548:3641   */\n      tag_47\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3666:3668   */\n      0x20\n        /* \"#utility.yul\":3661:3664   */\n      dup3\n        /* \"#utility.yul\":3657:3669   */\n      add\n        /* \"#utility.yul\":3650:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3309:3675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3681:4100   */\n    tag_27:\n        /* \"#utility.yul\":3847:3851   */\n      0x00\n        /* \"#utility.yul\":3885:3887   */\n      0x20\n        /* \"#utility.yul\":3874:3883   */\n      dup3\n        /* \"#utility.yul\":3870:3888   */\n      add\n        /* \"#utility.yul\":3862:3888   */\n      swap1\n      pop\n        /* \"#utility.yul\":3934:3943   */\n      dup2\n        /* \"#utility.yul\":3928:3932   */\n      dup2\n        /* \"#utility.yul\":3924:3944   */\n      sub\n        /* \"#utility.yul\":3920:3921   */\n      0x00\n        /* \"#utility.yul\":3909:3918   */\n      dup4\n        /* \"#utility.yul\":3905:3922   */\n      add\n        /* \"#utility.yul\":3898:3945   */\n      mstore\n        /* \"#utility.yul\":3962:4093   */\n      tag_89\n        /* \"#utility.yul\":4088:4092   */\n      dup2\n        /* \"#utility.yul\":3962:4093   */\n      tag_48\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3954:4093   */\n      swap1\n      pop\n        /* \"#utility.yul\":3681:4100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4106:4438   */\n    tag_29:\n        /* \"#utility.yul\":4227:4231   */\n      0x00\n        /* \"#utility.yul\":4265:4267   */\n      0x40\n        /* \"#utility.yul\":4254:4263   */\n      dup3\n        /* \"#utility.yul\":4250:4268   */\n      add\n        /* \"#utility.yul\":4242:4268   */\n      swap1\n      pop\n        /* \"#utility.yul\":4278:4349   */\n      tag_91\n        /* \"#utility.yul\":4346:4347   */\n      0x00\n        /* \"#utility.yul\":4335:4344   */\n      dup4\n        /* \"#utility.yul\":4331:4348   */\n      add\n        /* \"#utility.yul\":4322:4328   */\n      dup6\n        /* \"#utility.yul\":4278:4349   */\n      tag_36\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":4359:4431   */\n      tag_92\n        /* \"#utility.yul\":4427:4429   */\n      0x20\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4412:4430   */\n      add\n        /* \"#utility.yul\":4403:4409   */\n      dup5\n        /* \"#utility.yul\":4359:4431   */\n      tag_38\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":4106:4438   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4444:4534   */\n    tag_49:\n        /* \"#utility.yul\":4478:4485   */\n      0x00\n        /* \"#utility.yul\":4521:4526   */\n      dup2\n        /* \"#utility.yul\":4514:4527   */\n      iszero\n        /* \"#utility.yul\":4507:4528   */\n      iszero\n        /* \"#utility.yul\":4496:4528   */\n      swap1\n      pop\n        /* \"#utility.yul\":4444:4534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4540:4656   */\n    tag_50:\n        /* \"#utility.yul\":4610:4631   */\n      tag_95\n        /* \"#utility.yul\":4625:4630   */\n      dup2\n        /* \"#utility.yul\":4610:4631   */\n      tag_49\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":4603:4608   */\n      dup2\n        /* \"#utility.yul\":4600:4632   */\n      eq\n        /* \"#utility.yul\":4590:4650   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":4646:4647   */\n      0x00\n        /* \"#utility.yul\":4643:4644   */\n      dup1\n        /* \"#utility.yul\":4636:4648   */\n      revert\n        /* \"#utility.yul\":4590:4650   */\n    tag_96:\n        /* \"#utility.yul\":4540:4656   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4799   */\n    tag_51:\n        /* \"#utility.yul\":4716:4721   */\n      0x00\n        /* \"#utility.yul\":4747:4753   */\n      dup2\n        /* \"#utility.yul\":4741:4754   */\n      mload\n        /* \"#utility.yul\":4732:4754   */\n      swap1\n      pop\n        /* \"#utility.yul\":4763:4793   */\n      tag_98\n        /* \"#utility.yul\":4787:4792   */\n      dup2\n        /* \"#utility.yul\":4763:4793   */\n      tag_50\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":4662:4799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4805:5150   */\n    tag_33:\n        /* \"#utility.yul\":4872:4878   */\n      0x00\n        /* \"#utility.yul\":4921:4923   */\n      0x20\n        /* \"#utility.yul\":4909:4918   */\n      dup3\n        /* \"#utility.yul\":4900:4907   */\n      dup5\n        /* \"#utility.yul\":4896:4919   */\n      sub\n        /* \"#utility.yul\":4892:4924   */\n      slt\n        /* \"#utility.yul\":4889:5008   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":4927:5006   */\n      tag_101\n      tag_43\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4889:5008   */\n    tag_100:\n        /* \"#utility.yul\":5047:5048   */\n      0x00\n        /* \"#utility.yul\":5072:5133   */\n      tag_102\n        /* \"#utility.yul\":5125:5132   */\n      dup5\n        /* \"#utility.yul\":5116:5122   */\n      dup3\n        /* \"#utility.yul\":5105:5114   */\n      dup6\n        /* \"#utility.yul\":5101:5123   */\n      add\n        /* \"#utility.yul\":5072:5133   */\n      tag_51\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":5062:5133   */\n      swap2\n      pop\n        /* \"#utility.yul\":5018:5143   */\n      pop\n        /* \"#utility.yul\":4805:5150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209f0308f32c23542d563202d2dfa7e9f56e9f1832e1a7143464f12350a40cd59f64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052606460005534801561001557600080fd5b50604051610702380380610702833981810160405281019061003791906100e1565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ae82610083565b9050919050565b6100be816100a3565b81146100c957600080fd5b50565b6000815190506100db816100b5565b92915050565b6000602082840312156100f7576100f661007e565b5b6000610105848285016100cc565b91505092915050565b6105e58061011d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063359cf2b71461004657806382edaf94146100505780639ad2cd141461006e575b600080fd5b61004e61008c565b005b61005861031e565b604051610065919061038b565b60405180910390f35b610076610344565b60405161008391906103bf565b60405180910390f35b60001515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461011f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011690610437565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000548173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610182919061038b565b602060405180830381865afa15801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c39190610488565b1015610204576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fb90610501565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336000546040518363ffffffff1660e01b8152600401610241929190610521565b6020604051808303816000875af1158015610260573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102849190610582565b5060011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a905050506000543373ffffffffffffffffffffffffffffffffffffffff167f916800025d85907d1e91e112659a8e7e77a17ea4de231b05f15bb381d3bfde6160405160405180910390a350565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103758261034a565b9050919050565b6103858161036a565b82525050565b60006020820190506103a0600083018461037c565b92915050565b6000819050919050565b6103b9816103a6565b82525050565b60006020820190506103d460008301846103b0565b92915050565b600082825260208201905092915050565b7f6f6e6c7920626520636c61696d6564206f6e6365000000000000000000000000600082015250565b60006104216014836103da565b915061042c826103eb565b602082019050919050565b6000602082019050818103600083015261045081610414565b9050919050565b600080fd5b610465816103a6565b811461047057600080fd5b50565b6000815190506104828161045c565b92915050565b60006020828403121561049e5761049d610457565b5b60006104ac84828501610473565b91505092915050565b7f66617563657420656d7074792021212100000000000000000000000000000000600082015250565b60006104eb6010836103da565b91506104f6826104b5565b602082019050919050565b6000602082019050818103600083015261051a816104de565b9050919050565b6000604082019050610536600083018561037c565b61054360208301846103b0565b9392505050565b60008115159050919050565b61055f8161054a565b811461056a57600080fd5b50565b60008151905061057c81610556565b92915050565b60006020828403121561059857610597610457565b5b60006105a68482850161056d565b9150509291505056fea26469706673582212209f0308f32c23542d563202d2dfa7e9f56e9f1832e1a7143464f12350a40cd59f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x702 CODESIZE SUB DUP1 PUSH2 0x702 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x37 SWAP2 SWAP1 PUSH2 0xE1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x10E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE DUP3 PUSH2 0x83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE DUP2 PUSH2 0xA3 JUMP JUMPDEST DUP2 EQ PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDB DUP2 PUSH2 0xB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7 JUMPI PUSH2 0xF6 PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x105 DUP5 DUP3 DUP6 ADD PUSH2 0xCC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E5 DUP1 PUSH2 0x11D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x359CF2B7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x82EDAF94 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x9AD2CD14 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x488 JUMP JUMPDEST LT ISZERO PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x241 SWAP3 SWAP2 SWAP1 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x582 JUMP JUMPDEST POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP PUSH1 0x0 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x916800025D85907D1E91E112659A8E7E77A17EA4DE231B05F15BB381D3BFDE61 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x375 DUP3 PUSH2 0x34A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x36A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B9 DUP2 PUSH2 0x3A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C7920626520636C61696D6564206F6E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x421 PUSH1 0x14 DUP4 PUSH2 0x3DA JUMP JUMPDEST SWAP2 POP PUSH2 0x42C DUP3 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x450 DUP2 PUSH2 0x414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x465 DUP2 PUSH2 0x3A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x482 DUP2 PUSH2 0x45C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49E JUMPI PUSH2 0x49D PUSH2 0x457 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4AC DUP5 DUP3 DUP6 ADD PUSH2 0x473 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66617563657420656D7074792021212100000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB PUSH1 0x10 DUP4 PUSH2 0x3DA JUMP JUMPDEST SWAP2 POP PUSH2 0x4F6 DUP3 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51A DUP2 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x536 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x37C JUMP JUMPDEST PUSH2 0x543 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55F DUP2 PUSH2 0x54A JUMP JUMPDEST DUP2 EQ PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x57C DUP2 PUSH2 0x556 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x457 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5A6 DUP5 DUP3 DUP6 ADD PUSH2 0x56D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 SUB ADDMOD RETURN 0x2C 0x23 SLOAD 0x2D JUMP ORIGIN MUL 0xD2 0xDF 0xA7 0xE9 CREATE2 PUSH15 0x9F1832E1A7143464F12350A40CD59F PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "86:766:1:-:0;;;141:3;110:34;;318:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;394:21;371:20;;:44;;;;;;;;;;;;;;;;;;318:105;86:766;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;86:766:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@amountAllowed_83": {
									"entryPoint": 836,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestTokens_160": {
									"entryPoint": 140,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenContractAddress_85": {
									"entryPoint": 798,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1313,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b": {
									"entryPoint": 1205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5153:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:2",
														"type": ""
													}
												],
												"src": "139:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:2",
														"type": ""
													}
												],
												"src": "241:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:2",
														"type": ""
													}
												],
												"src": "365:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:2",
														"type": ""
													}
												],
												"src": "593:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:2",
														"type": ""
													}
												],
												"src": "676:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:2",
														"type": ""
													}
												],
												"src": "800:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1124:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1141:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1146:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1134:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1162:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1181:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1186:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1177:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1177:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1162:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1096:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1101:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1112:11:2",
														"type": ""
													}
												],
												"src": "1028:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1309:64:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1331:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1339:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1327:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1327:14:2"
																	},
																	{
																		"hexValue": "6f6e6c7920626520636c61696d6564206f6e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1343:22:2",
																		"type": "",
																		"value": "only be claimed once"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1320:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1320:46:2"
														}
													]
												},
												"name": "store_literal_in_memory_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1301:6:2",
														"type": ""
													}
												],
												"src": "1203:170:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1525:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1535:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1601:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1606:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1542:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1535:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1707:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d",
																	"nodeType": "YulIdentifier",
																	"src": "1618:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1618:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1618:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1720:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1731:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1727:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1727:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1720:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1513:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1521:3:2",
														"type": ""
													}
												],
												"src": "1379:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1922:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1932:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1944:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1955:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1940:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1932:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1979:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1990:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1975:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1975:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1998:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2004:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1994:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1994:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1968:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1968:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2024:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2158:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2032:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2024:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1902:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1917:4:2",
														"type": ""
													}
												],
												"src": "1751:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2216:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2226:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2242:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2236:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2209:6:2",
														"type": ""
													}
												],
												"src": "2176:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2346:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2366:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2356:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2356:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2257:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2469:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2486:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2489:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2479:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2479:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2479:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2380:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2546:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2603:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2612:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2615:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2605:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2605:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2605:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2569:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2594:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2576:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2576:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2566:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2566:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2559:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:43:2"
															},
															"nodeType": "YulIf",
															"src": "2556:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2539:5:2",
														"type": ""
													}
												],
												"src": "2503:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2694:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2704:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2719:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2713:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2704:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2762:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2735:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2735:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2672:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2680:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2688:5:2",
														"type": ""
													}
												],
												"src": "2631:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2857:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2903:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2905:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2905:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2905:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2878:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2887:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2874:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2899:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2870:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:32:2"
															},
															"nodeType": "YulIf",
															"src": "2867:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2996:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3011:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3025:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3015:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3040:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3086:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3097:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3082:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3082:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3106:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3050:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3050:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3040:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2827:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2838:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2850:6:2",
														"type": ""
													}
												],
												"src": "2780:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3243:60:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3265:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3273:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3261:14:2"
																	},
																	{
																		"hexValue": "66617563657420656d70747920212121",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3277:18:2",
																		"type": "",
																		"value": "faucet empty !!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3254:42:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3254:42:2"
														}
													]
												},
												"name": "store_literal_in_memory_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3235:6:2",
														"type": ""
													}
												],
												"src": "3137:166:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3455:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3465:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3531:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:2",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3472:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3472:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3465:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3637:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b",
																	"nodeType": "YulIdentifier",
																	"src": "3548:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3548:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3548:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3650:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3661:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3666:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3657:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3650:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3443:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3451:3:2",
														"type": ""
													}
												],
												"src": "3309:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3852:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3862:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3874:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3885:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3870:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3870:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3862:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3909:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3920:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3905:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3905:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3928:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3934:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3924:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3924:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3898:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3898:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3954:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4088:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3962:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3962:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3954:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3832:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3847:4:2",
														"type": ""
													}
												],
												"src": "3681:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4232:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4242:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4254:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4250:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4250:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4242:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4322:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4335:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4346:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4331:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4331:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4278:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4278:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4278:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4403:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4427:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4412:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4412:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4359:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4359:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4196:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4208:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4216:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4227:4:2",
														"type": ""
													}
												],
												"src": "4106:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4486:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4496:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4521:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4514:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4514:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4507:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4507:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4496:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4468:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4478:7:2",
														"type": ""
													}
												],
												"src": "4444:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4580:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4634:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4643:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4646:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4636:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4636:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4636:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4603:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4625:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4610:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4610:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4600:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4600:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4593:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4593:40:2"
															},
															"nodeType": "YulIf",
															"src": "4590:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4573:5:2",
														"type": ""
													}
												],
												"src": "4540:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4722:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4732:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4747:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4741:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4732:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4787:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4763:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4763:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4763:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4700:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4708:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4716:5:2",
														"type": ""
													}
												],
												"src": "4662:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4879:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4925:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4927:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4927:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4927:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4900:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4909:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4896:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4896:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4921:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4892:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4892:32:2"
															},
															"nodeType": "YulIf",
															"src": "4889:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5018:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5033:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5037:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5062:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5105:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5116:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5101:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5101:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5125:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5072:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5062:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4849:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4860:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4872:6:2",
														"type": ""
													}
												],
												"src": "4805:345:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d(memPtr) {\n\n        mstore(add(memPtr, 0), \"only be claimed once\")\n\n    }\n\n    function abi_encode_t_stringliteral_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b(memPtr) {\n\n        mstore(add(memPtr, 0), \"faucet empty !!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063359cf2b71461004657806382edaf94146100505780639ad2cd141461006e575b600080fd5b61004e61008c565b005b61005861031e565b604051610065919061038b565b60405180910390f35b610076610344565b60405161008391906103bf565b60405180910390f35b60001515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461011f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011690610437565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000548173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610182919061038b565b602060405180830381865afa15801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c39190610488565b1015610204576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fb90610501565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336000546040518363ffffffff1660e01b8152600401610241929190610521565b6020604051808303816000875af1158015610260573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102849190610582565b5060011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a905050506000543373ffffffffffffffffffffffffffffffffffffffff167f916800025d85907d1e91e112659a8e7e77a17ea4de231b05f15bb381d3bfde6160405160405180910390a350565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103758261034a565b9050919050565b6103858161036a565b82525050565b60006020820190506103a0600083018461037c565b92915050565b6000819050919050565b6103b9816103a6565b82525050565b60006020820190506103d460008301846103b0565b92915050565b600082825260208201905092915050565b7f6f6e6c7920626520636c61696d6564206f6e6365000000000000000000000000600082015250565b60006104216014836103da565b915061042c826103eb565b602082019050919050565b6000602082019050818103600083015261045081610414565b9050919050565b600080fd5b610465816103a6565b811461047057600080fd5b50565b6000815190506104828161045c565b92915050565b60006020828403121561049e5761049d610457565b5b60006104ac84828501610473565b91505092915050565b7f66617563657420656d7074792021212100000000000000000000000000000000600082015250565b60006104eb6010836103da565b91506104f6826104b5565b602082019050919050565b6000602082019050818103600083015261051a816104de565b9050919050565b6000604082019050610536600083018561037c565b61054360208301846103b0565b9392505050565b60008115159050919050565b61055f8161054a565b811461056a57600080fd5b50565b60008151905061057c81610556565b92915050565b60006020828403121561059857610597610457565b5b60006105a68482850161056d565b9150509291505056fea26469706673582212209f0308f32c23542d563202d2dfa7e9f56e9f1832e1a7143464f12350a40cd59f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x359CF2B7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x82EDAF94 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x9AD2CD14 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x488 JUMP JUMPDEST LT ISZERO PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x241 SWAP3 SWAP2 SWAP1 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x582 JUMP JUMPDEST POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP PUSH1 0x0 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x916800025D85907D1E91E112659A8E7E77A17EA4DE231B05F15BB381D3BFDE61 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x375 DUP3 PUSH2 0x34A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x385 DUP2 PUSH2 0x36A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B9 DUP2 PUSH2 0x3A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C7920626520636C61696D6564206F6E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x421 PUSH1 0x14 DUP4 PUSH2 0x3DA JUMP JUMPDEST SWAP2 POP PUSH2 0x42C DUP3 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x450 DUP2 PUSH2 0x414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x465 DUP2 PUSH2 0x3A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x482 DUP2 PUSH2 0x45C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49E JUMPI PUSH2 0x49D PUSH2 0x457 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4AC DUP5 DUP3 DUP6 ADD PUSH2 0x473 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x66617563657420656D7074792021212100000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB PUSH1 0x10 DUP4 PUSH2 0x3DA JUMP JUMPDEST SWAP2 POP PUSH2 0x4F6 DUP3 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51A DUP2 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x536 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x37C JUMP JUMPDEST PUSH2 0x543 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55F DUP2 PUSH2 0x54A JUMP JUMPDEST DUP2 EQ PUSH2 0x56A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x57C DUP2 PUSH2 0x556 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x457 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5A6 DUP5 DUP3 DUP6 ADD PUSH2 0x56D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 SUB ADDMOD RETURN 0x2C 0x23 SLOAD 0x2D JUMP ORIGIN MUL 0xD2 0xDF 0xA7 0xE9 CREATE2 PUSH15 0x9F1832E1A7143464F12350A40CD59F PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "86:766:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;431:414;;;:::i;:::-;;151:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;110:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;431:414;515:5;485:35;;:14;:26;500:10;485:26;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;477:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;555:12;577:20;;;;;;;;;;;555:43;;651:13;;617:5;:15;;;641:4;617:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;609:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;697:5;:14;;;712:10;723:13;;697:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;778:4;748:34;;:14;:26;763:10;748:26;;;;;;;;;;;;;;;;;;;;;;;;:34;821:13;;810:10;800:35;;;;;;;;;;;;466:379;431:414::o;151:35::-;;;;;;;;;;;;;:::o;110:34::-;;;;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1028:169::-;1112:11;1146:6;1141:3;1134:19;1186:4;1181:3;1177:14;1162:29;;1028:169;;;;:::o;1203:170::-;1343:22;1339:1;1331:6;1327:14;1320:46;1203:170;:::o;1379:366::-;1521:3;1542:67;1606:2;1601:3;1542:67;:::i;:::-;1535:74;;1618:93;1707:3;1618:93;:::i;:::-;1736:2;1731:3;1727:12;1720:19;;1379:366;;;:::o;1751:419::-;1917:4;1955:2;1944:9;1940:18;1932:26;;2004:9;1998:4;1994:20;1990:1;1979:9;1975:17;1968:47;2032:131;2158:4;2032:131;:::i;:::-;2024:139;;1751:419;;;:::o;2257:117::-;2366:1;2363;2356:12;2503:122;2576:24;2594:5;2576:24;:::i;:::-;2569:5;2566:35;2556:63;;2615:1;2612;2605:12;2556:63;2503:122;:::o;2631:143::-;2688:5;2719:6;2713:13;2704:22;;2735:33;2762:5;2735:33;:::i;:::-;2631:143;;;;:::o;2780:351::-;2850:6;2899:2;2887:9;2878:7;2874:23;2870:32;2867:119;;;2905:79;;:::i;:::-;2867:119;3025:1;3050:64;3106:7;3097:6;3086:9;3082:22;3050:64;:::i;:::-;3040:74;;2996:128;2780:351;;;;:::o;3137:166::-;3277:18;3273:1;3265:6;3261:14;3254:42;3137:166;:::o;3309:366::-;3451:3;3472:67;3536:2;3531:3;3472:67;:::i;:::-;3465:74;;3548:93;3637:3;3548:93;:::i;:::-;3666:2;3661:3;3657:12;3650:19;;3309:366;;;:::o;3681:419::-;3847:4;3885:2;3874:9;3870:18;3862:26;;3934:9;3928:4;3924:20;3920:1;3909:9;3905:17;3898:47;3962:131;4088:4;3962:131;:::i;:::-;3954:139;;3681:419;;;:::o;4106:332::-;4227:4;4265:2;4254:9;4250:18;4242:26;;4278:71;4346:1;4335:9;4331:17;4322:6;4278:71;:::i;:::-;4359:72;4427:2;4416:9;4412:18;4403:6;4359:72;:::i;:::-;4106:332;;;;;:::o;4444:90::-;4478:7;4521:5;4514:13;4507:21;4496:32;;4444:90;;;:::o;4540:116::-;4610:21;4625:5;4610:21;:::i;:::-;4603:5;4600:32;4590:60;;4646:1;4643;4636:12;4590:60;4540:116;:::o;4662:137::-;4716:5;4747:6;4741:13;4732:22;;4763:30;4787:5;4763:30;:::i;:::-;4662:137;;;;:::o;4805:345::-;4872:6;4921:2;4909:9;4900:7;4896:23;4892:32;4889:119;;;4927:79;;:::i;:::-;4889:119;5047:1;5072:61;5125:7;5116:6;5105:9;5101:22;5072:61;:::i;:::-;5062:71;;5018:125;4805:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "301800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"amountAllowed()": "2451",
								"requestTokens()": "infinite",
								"tokenContractAddress()": "2514"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 86,
									"end": 852,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 86,
									"end": 852,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 86,
									"end": 852,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 141,
									"end": 144,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 110,
									"end": 144,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 110,
									"end": 144,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 318,
									"end": 423,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 423,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 318,
									"end": 423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 318,
									"end": 423,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 318,
									"end": 423,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 318,
									"end": 423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 318,
									"end": 423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 318,
									"end": 423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 394,
									"end": 415,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 391,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 391,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 415,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 371,
									"end": 415,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 371,
									"end": 415,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 371,
									"end": 415,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 371,
									"end": 415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 318,
									"end": 423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 86,
									"end": 852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 86,
									"end": 852,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 86,
									"end": 852,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 86,
									"end": 852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 86,
									"end": 852,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 852,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 86,
									"end": 852,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 852,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 852,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 86,
									"end": 852,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 852,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f0308f32c23542d563202d2dfa7e9f56e9f1832e1a7143464f12350a40cd59f64736f6c63430008130033",
									".code": [
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "359CF2B7"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "82EDAF94"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "9AD2CD14"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 86,
											"end": 852,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 431,
											"end": 845,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 431,
											"end": 845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 431,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 431,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 431,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 431,
											"end": 845,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 431,
											"end": 845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 431,
											"end": 845,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 151,
											"end": 186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 151,
											"end": 186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 110,
											"end": 144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 110,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 110,
											"end": 144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 110,
											"end": 144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 110,
											"end": 144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 110,
											"end": 144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 110,
											"end": 144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 110,
											"end": 144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 110,
											"end": 144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 431,
											"end": 845,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 431,
											"end": 845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 515,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 485,
											"end": 520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 485,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 510,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 485,
											"end": 520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 485,
											"end": 520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 485,
											"end": 520,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 477,
											"end": 544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 544,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 477,
											"end": 544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 477,
											"end": 544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 477,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 477,
											"end": 544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 544,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 477,
											"end": 544,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 477,
											"end": 544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 577,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 577,
											"end": 597,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 577,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 577,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 577,
											"end": 597,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 577,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 577,
											"end": 597,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 577,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 597,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 651,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 664,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 617,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 617,
											"end": 632,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 617,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 641,
											"end": 645,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 617,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 617,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 617,
											"end": 647,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 617,
											"end": 647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 617,
											"end": 664,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 617,
											"end": 664,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 609,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 609,
											"end": 684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 609,
											"end": 684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 609,
											"end": 684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 609,
											"end": 684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 609,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 609,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 609,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 697,
											"end": 702,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 711,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 697,
											"end": 711,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 712,
											"end": 722,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 723,
											"end": 736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 736,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 697,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 697,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 697,
											"end": 737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 697,
											"end": 737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 748,
											"end": 782,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 748,
											"end": 782,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 748,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 748,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 773,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 774,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 774,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 774,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 748,
											"end": 774,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 748,
											"end": 782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 821,
											"end": 834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 810,
											"end": 820,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 800,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 800,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "916800025D85907D1E91E112659A8E7E77A17EA4DE231B05F15BB381D3BFDE61"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 800,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 800,
											"end": 835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 835,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 800,
											"end": 835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 835,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 466,
											"end": 845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 431,
											"end": 845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 151,
											"end": 186,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 151,
											"end": 186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 110,
											"end": 144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 144,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 110,
											"end": 144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1197,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1028,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1152,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1153,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1177,
											"end": 1191,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1191,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1197,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1197,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1373,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1365,
											"name": "PUSH",
											"source": 2,
											"value": "6F6E6C7920626520636C61696D6564206F6E6365000000000000000000000000"
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1337,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1373,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1745,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1379,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1606,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1601,
											"end": 1604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1542,
											"end": 1609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1542,
											"end": 1609,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1542,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1707,
											"end": 1710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1711,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1618,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1745,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1751,
											"end": 2170,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1751,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1921,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1957,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1944,
											"end": 1953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 2014,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1988,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 1992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2158,
											"end": 2162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2032,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2032,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1751,
											"end": 2170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1751,
											"end": 2170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1751,
											"end": 2170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1751,
											"end": 2170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2374,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2257,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2368,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2625,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2503,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2594,
											"end": 2599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2576,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2600,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2576,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2601,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2556,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2556,
											"end": 2619,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2613,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2556,
											"end": 2619,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2556,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2503,
											"end": 2625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2774,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2631,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2713,
											"end": 2726,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2762,
											"end": 2767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2735,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2768,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2735,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2774,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 3131,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2780,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2901,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2885,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2897,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2870,
											"end": 2902,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2867,
											"end": 2986,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2867,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2867,
											"end": 2986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2905,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2867,
											"end": 2986,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2867,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3106,
											"end": 3113,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3103,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3050,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3114,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3050,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 3131,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 3131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 3131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 3131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 3131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3303,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3137,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3277,
											"end": 3295,
											"name": "PUSH",
											"source": 2,
											"value": "66617563657420656D7074792021212100000000000000000000000000000000"
										},
										{
											"begin": 3273,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3271,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3261,
											"end": 3275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3254,
											"end": 3296,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3309,
											"end": 3675,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3309,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3451,
											"end": 3454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3536,
											"end": 3538,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3531,
											"end": 3534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3472,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3539,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3472,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3539,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3637,
											"end": 3640,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3548,
											"end": 3641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3641,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3548,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3666,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3669,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3309,
											"end": 3675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3309,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3309,
											"end": 3675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3309,
											"end": 3675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 4100,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3681,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3851,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3874,
											"end": 3883,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3862,
											"end": 3888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3862,
											"end": 3888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 3932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3944,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3905,
											"end": 3922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3898,
											"end": 3945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4088,
											"end": 4092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3962,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 4093,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3962,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3954,
											"end": 4093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3954,
											"end": 4093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 4100,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 4100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 4100,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 4100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4438,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4106,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4227,
											"end": 4231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4254,
											"end": 4263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4242,
											"end": 4268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4242,
											"end": 4268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4344,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4331,
											"end": 4348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4278,
											"end": 4349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4278,
											"end": 4349,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4278,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4427,
											"end": 4429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4403,
											"end": 4409,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4359,
											"end": 4431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4431,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4359,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4438,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4438,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4534,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4444,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4527,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4507,
											"end": 4528,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4496,
											"end": 4528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4496,
											"end": 4528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4540,
											"end": 4656,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4540,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4625,
											"end": 4630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4610,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4590,
											"end": 4650,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4643,
											"end": 4644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4636,
											"end": 4648,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4590,
											"end": 4650,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4590,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4540,
											"end": 4656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4540,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4662,
											"end": 4799,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4662,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4741,
											"end": 4754,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4732,
											"end": 4754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4732,
											"end": 4754,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4787,
											"end": 4792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4763,
											"end": 4793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 4793,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4763,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4662,
											"end": 4799,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4662,
											"end": 4799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4662,
											"end": 4799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4662,
											"end": 4799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4662,
											"end": 4799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 5150,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4805,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4878,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4923,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4909,
											"end": 4918,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 4919,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4892,
											"end": 4924,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4889,
											"end": 5008,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4889,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4889,
											"end": 5008,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4927,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4927,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4927,
											"end": 5006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4927,
											"end": 5006,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4927,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4889,
											"end": 5008,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4889,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5072,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5125,
											"end": 5132,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5105,
											"end": 5114,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5101,
											"end": 5123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5072,
											"end": 5133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5133,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5072,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5018,
											"end": 5143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 5150,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 5150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 5150,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 5150,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4805,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contract/IERC20.sol",
								"contract/faucet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"amountAllowed()": "9ad2cd14",
							"requestTokens()": "359cf2b7",
							"tokenContractAddress()": "82edaf94"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"Receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"SendToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"amountAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/faucet.sol\":\"faucet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/IERC20.sol\":{\"keccak256\":\"0x348503cbba1d9c9ca51cdbfaac561ac2d32f7956a96e30997205a9f2cb06629b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3238430781cc748b196db3779e1ae2b94a5c69c59051a7093c36541c65a58be0\",\"dweb:/ipfs/QmYUVqT4UM2QW5zBJCbmxjGpwGB8BsA2PqUiujFoEW6mHJ\"]},\"contract/faucet.sol\":{\"keccak256\":\"0x971d32d5764d23b8cf0188bf025cd96ecefa5c8d8a4a4334a66a98df70847a91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7db1ee94fbd30be1fbe95d8df9fdef5a40bbb81cb18b22475101929e9f5f1f6d\",\"dweb:/ipfs/QmWk7KVxRuCfZEwqCK4X17QXKMCrE6c6q4DfeKSujPT1yS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contract/faucet.sol:faucet",
								"label": "amountAllowed",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 85,
								"contract": "contract/faucet.sol:faucet",
								"label": "tokenContractAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 89,
								"contract": "contract/faucet.sol:faucet",
								"label": "requestAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contract/IERC20.sol": {
				"ast": {
					"absolutePath": "contract/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "60:37:0",
								"text": " @dev ERC20 接口合约."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "109:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "123:119:0",
										"text": " @dev 释放条件：当 `value` 单位的货币从账户 (`from`) 转账到另一账户 (`to`)时."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "254:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "279:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "263:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "301:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "285:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "313:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "305:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:57:0"
									},
									"src": "248:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "328:125:0",
										"text": " @dev 释放条件：当 `value` 单位的货币从账户 (`owner`) 授权给另一账户 (`spender`)时."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "465:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "490:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "474:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "513:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "497:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "530:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:63:0"
									},
									"src": "459:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "545:48:0",
										"text": " @dev 返回代币总供给."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "645:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:9:0"
									},
									"scope": 77,
									"src": "599:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "662:69:0",
										"text": " @dev 返回账户`account`所持有的代币数."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "746:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "764:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "756:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "796:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:9:0"
									},
									"scope": 77,
									"src": "737:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "813:184:0",
										"text": " @dev 转账 `amount` 单位代币，从调用者账户到另一账户 `to`.\n 如果成功，返回 `true`.\n 释放 {Transfer} 事件."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1012:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1029:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1021:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1041:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1033:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1067:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1067:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:6:0"
									},
									"scope": 77,
									"src": "1003:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1081:179:0",
										"text": " @dev 返回`owner`账户授权给`spender`账户的额度，默认为0。\n 当{approve} 或 {transferFrom} 被调用时，`allowance`会改变."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1275:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1293:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1285:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1308:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1300:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1340:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:9:0"
									},
									"scope": 77,
									"src": "1266:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1357:177:0",
										"text": " @dev 调用者账户给`spender`账户授权 `amount`数量代币。\n 如果成功，返回 `true`.\n 释放 {Approval} 事件."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1549:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1565:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1557:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1582:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1574:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1608:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1608:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1607:6:0"
									},
									"scope": 77,
									"src": "1540:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "1622:248:0",
										"text": " @dev 通过授权机制，从`from`账户向`to`账户转账`amount`数量代币。转账的部分会从调用者的`allowance`中扣除。\n 如果成功，返回 `true`.\n 释放 {Transfer} 事件."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1885:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1916:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1908:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1939:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1931:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1960:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1952:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1992:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1992:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:6:0"
									},
									"scope": 77,
									"src": "1876:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "99:1902:0",
							"usedErrors": []
						}
					],
					"src": "33:1968:0"
				},
				"id": 0
			},
			"contract/faucet.sol": {
				"ast": {
					"absolutePath": "contract/faucet.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"faucet": [
							161
						]
					},
					"id": 162,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contract/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 162,
							"sourceUnit": 78,
							"src": "60:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "faucet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 161,
							"linearizedBaseContracts": [
								161
							],
							"name": "faucet",
							"nameLocation": "95:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ad2cd14",
									"id": 83,
									"mutability": "mutable",
									"name": "amountAllowed",
									"nameLocation": "125:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 161,
									"src": "110:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "110:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "141:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "82edaf94",
									"id": 85,
									"mutability": "mutable",
									"name": "tokenContractAddress",
									"nameLocation": "166:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 161,
									"src": "151:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "151:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 89,
									"mutability": "mutable",
									"name": "requestAddress",
									"nameLocation": "218:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 161,
									"src": "193:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 88,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 86,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "201:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "193:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 87,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "212:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "916800025d85907d1e91e112659a8e7e77a17ea4de231b05f15bb381d3bfde61",
									"id": 95,
									"name": "SendToken",
									"nameLocation": "249:9:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"indexed": true,
												"mutability": "mutable",
												"name": "Receiver",
												"nameLocation": "275:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "259:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "Amount",
												"nameLocation": "300:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "284:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:49:1"
									},
									"src": "243:65:1"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "360:63:1",
										"statements": [
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 100,
														"name": "tokenContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "371:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 101,
														"name": "_tokenContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "394:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "371:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "371:44:1"
											}
										]
									},
									"id": 105,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_tokenContractAddress",
												"nameLocation": "338:21:1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "330:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:31:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "360:0:1"
									},
									"scope": 161,
									"src": "318:105:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "466:379:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 109,
																	"name": "requestAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "485:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 112,
																"indexExpression": {
																	"expression": {
																		"id": 110,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "500:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "504:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "500:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "485:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "515:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "485:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c7920626520636c61696d6564206f6e6365",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "521:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d",
																"typeString": "literal_string \"only be claimed once\""
															},
															"value": "only be claimed once"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c2deb86e63970418176d2600952145e48ae156cfd0a35508bdaba846fb5e305d",
																"typeString": "literal_string \"only be claimed once\""
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "477:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "477:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "477:67:1"
											},
											{
												"assignments": [
													120
												],
												"declarations": [
													{
														"constant": false,
														"id": 120,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "562:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "555:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 119,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 118,
																"name": "IERC20",
																"nameLocations": [
																	"555:6:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 77,
																"src": "555:6:1"
															},
															"referencedDeclaration": 77,
															"src": "555:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 124,
												"initialValue": {
													"arguments": [
														{
															"id": 122,
															"name": "tokenContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "577:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "570:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "570:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "555:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 130,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "641:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_faucet_$161",
																					"typeString": "contract faucet"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_faucet_$161",
																					"typeString": "contract faucet"
																				}
																			],
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "633:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 128,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "633:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "633:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 126,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 120,
																		"src": "617:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "623:9:1",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "617:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "617:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 133,
																"name": "amountAllowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "651:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "617:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "66617563657420656d70747920212121",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "665:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b",
																"typeString": "literal_string \"faucet empty !!!\""
															},
															"value": "faucet empty !!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1b47c72d1f8772aa2cc0d79e801a9ee7677d8c16b04eb6e0b7896eea4d1709b",
																"typeString": "literal_string \"faucet empty !!!\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "609:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "609:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "609:75:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "712:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "716:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "712:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 143,
															"name": "amountAllowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "723:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 138,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "697:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "703:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "697:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "697:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "697:40:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 146,
															"name": "requestAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "748:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 149,
														"indexExpression": {
															"expression": {
																"id": 147,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "763:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "767:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "763:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "748:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "778:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "748:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "748:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 154,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "810:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "814:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "810:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 156,
															"name": "amountAllowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "821:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 153,
														"name": "SendToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "800:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "800:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "EmitStatement",
												"src": "795:40:1"
											}
										]
									},
									"functionSelector": "359cf2b7",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestTokens",
									"nameLocation": "440:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:2:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "466:0:1"
									},
									"scope": 161,
									"src": "431:414:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 162,
							"src": "86:766:1",
							"usedErrors": []
						}
					],
					"src": "33:819:1"
				},
				"id": 1
			}
		}
	}
}